// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitApi.Models;

#nullable disable

namespace RecruitApi.Migrations
{
  [DbContext(typeof(SystemDbContext))]
  partial class AppDbContextModelSnapshot : ModelSnapshot
  {
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "7.0.0")
          .HasAnnotation("Relational:MaxIdentifierLength", 128);

      SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

      modelBuilder.Entity("EquipmentExercise", b =>
          {
            b.Property<int>("EquipmentIdEquipment")
                      .HasColumnType("int");

            b.Property<int>("ExerciseIdExercise")
                      .HasColumnType("int");

            b.HasKey("EquipmentIdEquipment", "ExerciseIdExercise");

            b.HasIndex("ExerciseIdExercise");

            b.ToTable("ExerciseEquipment", (string)null);
          });

      modelBuilder.Entity("RecruitApi.Models.Training.Equipment", b =>
          {
            b.Property<int>("IdEquipment")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipment"));

            b.Property<int>("Count")
                      .HasColumnType("int");

            b.Property<string>("Description")
                      .HasMaxLength(50)
                      .HasColumnType("nvarchar(50)");

            b.Property<int>("EquipmentType")
                      .HasColumnType("int");

            b.Property<string>("ImageUrl")
                      .HasColumnType("nvarchar(max)");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(20)
                      .HasColumnType("nvarchar(20)");

            b.Property<string>("Notes")
                      .HasMaxLength(100)
                      .HasColumnType("nvarchar(100)");

            b.Property<string>("VideoUrl")
                      .HasColumnType("nvarchar(max)");

            b.Property<int>("Weight")
                      .HasColumnType("int");

            b.Property<bool>("isForHomeWorkout")
                      .HasColumnType("bit");

            b.Property<bool>("isForOutdoorWorkout")
                      .HasColumnType("bit");

            b.HasKey("IdEquipment");

            b.ToTable("equipments_tb", (string)null);
          });

      modelBuilder.Entity("RecruitApi.Models.Training.Exercise", b =>
          {
            b.Property<int>("IdExercise")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExercise"));

            b.Property<long?>("AuthorId")
                      .IsRequired()
                      .HasColumnType("bigint");

            b.Property<int?>("CountOfExercisesToRepeat")
                      .HasColumnType("int");

            b.Property<string>("Description")
                      .HasMaxLength(50)
                      .HasColumnType("nvarchar(50)");

            b.Property<int?>("Difficulty")
                      .HasColumnType("int");

            b.Property<string>("ImageUrl")
                      .HasColumnType("nvarchar(max)");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasMaxLength(25)
                      .HasColumnType("nvarchar(25)");

            b.Property<int?>("NumberOfSets")
                      .HasColumnType("int");

            b.Property<string>("TargetMuscleGroup")
                      .HasMaxLength(20)
                      .HasColumnType("nvarchar(20)");

            b.Property<string>("VideoUrl")
                      .HasColumnType("nvarchar(max)");

            b.HasKey("IdExercise");

            b.HasIndex("AuthorId");

            b.ToTable("exercises_tb", (string)null);
          });

      modelBuilder.Entity("RecruitApi.Models.User", b =>
          {
            b.Property<long>("IdUser")
                      .ValueGeneratedOnAdd()
                      .HasColumnType("bigint");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdUser"));

            b.Property<bool>("IsActive")
                      .HasColumnType("bit");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasColumnType("nvarchar(max)");

            b.HasKey("IdUser");

            b.ToTable("users_tb", (string)null);
          });

      modelBuilder.Entity("EquipmentExercise", b =>
          {
            b.HasOne("RecruitApi.Models.Training.Equipment", null)
                      .WithMany()
                      .HasForeignKey("EquipmentIdEquipment")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("RecruitApi.Models.Training.Exercise", null)
                      .WithMany()
                      .HasForeignKey("ExerciseIdExercise")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("RecruitApi.Models.Training.Exercise", b =>
          {
            b.HasOne("RecruitApi.Models.User", "Author")
                      .WithMany()
                      .HasForeignKey("AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("Author");
          });
#pragma warning restore 612, 618
    }
  }
}
